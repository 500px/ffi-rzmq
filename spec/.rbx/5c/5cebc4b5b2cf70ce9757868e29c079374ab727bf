!RBIX
17064710627737423303
19
M
1
n
n
x
10
__script__
i
55
5
45
0
1
45
0
2
65
49
3
0
49
4
1
7
5
64
35
1
49
6
2
47
49
7
1
15
99
7
8
65
49
9
2
13
99
12
7
10
12
7
11
12
65
12
49
12
4
15
49
10
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
13
x
4
File
n
n
x
11
active_path
x
7
dirname
s
E
8
US-ASCII
11
spec_helper
x
4
join
x
7
require
x
3
ZMQ
x
11
open_module
x
15
__module_init__
M
1
n
n
x
3
ZMQ
i
13
5
66
5
45
0
1
56
2
47
50
3
1
11
I
3
I
0
I
0
I
0
I
0
n
p
4
x
6
Socket
n
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
28
when running basic push pull
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
83
5
45
0
1
47
49
2
1
15
5
7
3
56
4
47
50
5
1
15
5
7
6
56
7
47
50
8
1
15
5
7
6
56
9
47
50
10
1
15
5
7
11
64
56
12
47
50
13
1
15
5
7
14
64
56
15
47
50
13
1
15
5
7
16
64
56
17
47
50
13
1
15
5
7
18
64
56
19
47
50
13
1
11
I
4
I
0
I
0
I
0
I
0
n
p
20
x
9
APIHelper
n
x
7
include
x
6
string
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
4
7
0
64
11
I
2
I
0
I
0
I
0
I
0
n
p
1
s
E
8
US-ASCII
11
booga-booga
p
3
I
-1
I
9
I
4
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
3
let
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
105
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
15
5
48
6
15
39
5
45
7
8
43
9
49
10
1
38
11
15
39
5
45
7
12
43
13
49
10
1
38
14
15
39
11
45
7
15
43
16
78
49
17
2
15
39
14
45
7
18
43
16
78
49
17
2
15
7
19
64
38
20
15
39
11
39
20
49
21
1
15
5
39
14
39
20
47
49
22
2
11
I
4
I
0
I
0
I
0
I
0
n
p
23
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
8
@context
x
12
poller_setup
x
3
ZMQ
n
x
4
PUSH
x
6
socket
x
5
@push
n
x
4
PULL
x
5
@pull
n
x
6
LINGER
x
10
setsockopt
n
s
E
8
US-ASCII
23
inproc://push_pull_test
x
5
@link
x
4
bind
x
17
connect_to_inproc
p
21
I
-1
I
b
I
0
I
e
I
1b
I
f
I
1f
I
11
I
2c
I
12
I
39
I
13
I
45
I
14
I
51
I
16
I
57
I
17
I
5f
I
18
I
69
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
18
39
0
49
1
0
15
39
2
49
1
0
15
39
3
49
4
0
11
I
2
I
0
I
0
I
0
I
0
n
p
5
x
5
@push
x
5
close
x
5
@pull
x
8
@context
x
9
terminate
p
9
I
-1
I
1b
I
0
I
1c
I
6
I
1d
I
c
I
1e
I
12
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
5
after
s
E
8
US-ASCII
98
should receive an exact copy of the sent message using Message objects directly on one pull socket
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
44
39
0
5
48
1
49
2
1
15
7
3
64
19
0
15
39
4
20
0
49
5
1
19
1
15
5
20
1
47
49
6
1
15
20
0
49
7
0
5
48
1
83
8
11
I
5
I
2
I
0
I
0
I
0
n
p
9
x
5
@push
x
6
string
x
11
send_string
s
E
8
US-ASCII
0

x
5
@pull
x
11
recv_string
x
9
assert_ok
x
6
should
x
2
==
p
13
I
-1
I
21
I
0
I
22
I
9
I
23
I
f
I
24
I
19
I
25
I
21
I
26
I
2c
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
2
x
8
received
x
2
rc
x
2
it
s
E
8
US-ASCII
126
should receive an exact string copy of the message sent when receiving in non-blocking mode and using Message objects directly
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
131
45
0
1
13
71
2
47
9
24
47
49
3
0
13
5
48
4
47
49
5
1
15
8
30
5
48
4
49
2
1
19
0
15
45
0
6
13
71
2
47
9
54
47
49
3
0
13
47
49
5
0
15
8
57
49
2
0
19
1
15
5
39
7
56
8
47
50
9
1
15
39
7
20
1
45
10
11
43
12
49
13
2
19
2
15
45
14
15
49
16
0
9
103
20
2
49
17
0
78
83
18
8
116
20
2
49
17
0
5
48
4
49
19
0
83
18
15
20
1
49
20
0
49
17
0
5
48
4
83
18
11
I
7
I
3
I
0
I
0
I
0
n
p
21
x
7
Message
n
x
3
new
x
8
allocate
x
6
string
x
10
initialize
n
x
5
@pull
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
43
39
0
21
1
0
49
1
1
19
0
15
45
2
3
49
4
0
9
29
20
0
49
5
0
78
83
6
8
42
20
0
49
5
0
5
48
7
49
8
0
83
6
11
I
4
I
1
I
0
I
0
I
0
n
p
9
x
5
@push
x
7
sendmsg
x
6
LibZMQ
n
x
9
version2?
x
6
should
x
2
==
x
6
string
x
4
size
p
9
I
-1
I
2d
I
0
I
2e
I
b
I
2f
I
2a
I
0
I
2b
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
2
rc
x
16
poll_it_for_read
x
3
ZMQ
n
x
11
NonBlocking
x
7
recvmsg
x
6
LibZMQ
n
x
9
version2?
x
6
should
x
2
==
x
4
size
x
15
copy_out_string
p
17
I
-1
I
29
I
0
I
2a
I
21
I
2b
I
3c
I
2d
I
46
I
32
I
55
I
33
I
74
I
0
I
75
I
34
I
83
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
3
x
12
sent_message
x
16
received_message
x
2
rc
s
E
8
US-ASCII
169
should receive a single message for each message sent on each socket listening, when an equal number of sockets pulls messages and where each socket is unique per thread
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
108
35
0
19
0
15
35
0
19
1
15
35
0
19
2
15
4
4
19
3
15
45
0
1
13
71
2
47
9
41
47
49
3
0
13
47
49
4
0
15
8
44
49
2
0
19
4
15
20
3
79
82
5
56
6
50
7
0
15
20
2
39
8
49
9
1
15
20
2
56
10
50
11
0
15
20
3
56
12
50
7
0
15
20
1
56
13
50
11
0
15
20
0
56
14
50
15
0
49
16
0
49
17
0
20
3
83
18
11
I
8
I
5
I
0
I
0
I
0
n
p
19
x
5
Mutex
n
x
3
new
x
8
allocate
x
10
initialize
x
1
-
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
44
39
0
45
1
2
43
3
49
4
1
19
0
15
20
0
45
1
5
43
6
78
49
7
2
15
5
20
0
39
8
47
49
9
2
15
21
1
2
20
0
49
10
1
11
I
5
I
1
I
0
I
0
I
0
n
p
11
x
8
@context
x
3
ZMQ
n
x
4
PULL
x
6
socket
n
x
6
LINGER
x
10
setsockopt
x
5
@link
x
17
connect_to_inproc
x
2
<<
p
11
I
-1
I
41
I
0
I
42
I
d
I
43
I
19
I
44
I
23
I
45
I
2c
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
6
socket
x
5
times
x
5
@pull
x
2
<<
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
15
21
1
1
45
0
1
56
2
50
3
0
49
4
1
11
I
5
I
1
I
1
I
0
I
1
n
p
5
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
7
0
64
19
0
15
21
1
0
20
0
49
1
1
19
1
15
5
47
49
2
0
9
34
20
1
49
3
0
78
83
4
8
46
20
1
49
3
0
20
0
49
5
0
83
4
15
21
2
4
56
6
50
7
0
15
21
1
0
49
8
0
11
I
5
I
2
I
0
I
0
I
0
n
p
9
s
E
8
US-ASCII
0

x
11
recv_string
x
9
version2?
x
6
should
x
2
==
x
4
size
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
10
21
3
0
21
1
0
49
0
1
11
I
3
I
0
I
0
I
0
I
0
n
p
1
x
2
<<
p
3
I
-1
I
4e
I
a
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
11
synchronize
x
5
close
p
15
I
-1
I
4a
I
0
I
4b
I
6
I
4c
I
11
I
4d
I
2e
I
0
I
2f
I
4e
I
38
I
4f
I
3f
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
2
x
6
buffer
x
2
rc
x
3
new
x
2
<<
p
7
I
-1
I
49
I
0
I
4a
I
b
I
50
I
f
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
6
socket
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
9
39
0
5
48
1
49
2
1
11
I
3
I
0
I
0
I
0
I
0
n
p
3
x
5
@push
x
6
string
x
11
send_string
p
3
I
-1
I
53
I
9
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
4
join
p
3
I
-1
I
55
I
6
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
1
t
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
8
20
0
5
48
0
83
1
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
6
string
x
2
==
p
3
I
-1
I
57
I
8
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
1
r
x
8
find_all
x
6
length
x
6
should
x
2
==
p
25
I
-1
I
39
I
0
I
3a
I
5
I
3b
I
a
I
3c
I
f
I
3d
I
14
I
3e
I
2f
I
41
I
3a
I
47
I
42
I
49
I
4a
I
53
I
52
I
55
I
5a
I
57
I
6c
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
5
x
8
received
x
7
threads
x
7
sockets
x
5
count
x
5
mutex
s
E
8
US-ASCII
108
should receive a single message for each message sent when using a single shared socket protected by a mutex
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
84
35
0
19
0
15
35
0
19
1
15
4
4
19
2
15
45
0
1
13
71
2
47
9
36
47
49
3
0
13
47
49
4
0
15
8
39
49
2
0
19
3
15
20
2
56
5
50
6
0
15
20
2
56
7
50
6
0
15
20
1
56
8
50
9
0
15
20
0
56
10
50
11
0
49
12
0
49
13
0
20
2
83
14
11
I
7
I
4
I
0
I
0
I
0
n
p
15
x
5
Mutex
n
x
3
new
x
8
allocate
x
10
initialize
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
15
21
1
1
45
0
1
56
2
50
3
0
49
4
1
11
I
5
I
1
I
1
I
0
I
1
n
p
5
x
6
Thread
n
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
58
7
0
64
19
0
15
78
19
1
15
21
2
3
56
1
50
2
0
15
5
47
49
3
0
9
36
20
1
49
4
0
78
83
5
8
48
20
1
49
4
0
20
0
49
6
0
83
5
15
21
2
3
56
7
50
2
0
11
I
5
I
2
I
0
I
0
I
0
n
p
8
s
E
8
US-ASCII
0

M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
12
39
0
21
1
0
49
1
1
22
1
1
11
I
3
I
0
I
0
I
0
I
0
n
p
2
x
5
@pull
x
11
recv_string
p
3
I
-1
I
64
I
c
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
11
synchronize
x
9
version2?
x
6
should
x
2
==
x
4
size
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
10
21
3
0
21
1
0
49
0
1
11
I
3
I
0
I
0
I
0
I
0
n
p
1
x
2
<<
p
3
I
-1
I
66
I
a
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
p
15
I
-1
I
61
I
0
I
62
I
6
I
63
I
a
I
64
I
13
I
65
I
30
I
0
I
31
I
66
I
3a
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
2
x
6
buffer
x
2
rc
x
3
new
x
2
<<
p
7
I
-1
I
60
I
0
I
61
I
b
I
67
I
f
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
1
i
x
5
times
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
9
39
0
5
48
1
49
2
1
11
I
3
I
0
I
0
I
0
I
0
n
p
3
x
5
@push
x
6
string
x
11
send_string
p
3
I
-1
I
6a
I
9
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
20
0
49
0
0
11
I
3
I
1
I
1
I
0
I
1
n
p
1
x
4
join
p
3
I
-1
I
6c
I
6
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
1
t
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
8
20
0
5
48
0
83
1
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
6
string
x
2
==
p
3
I
-1
I
6e
I
8
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
1
x
1
r
x
8
find_all
x
6
length
x
6
should
x
2
==
p
19
I
-1
I
5a
I
0
I
5b
I
5
I
5c
I
a
I
5d
I
f
I
5e
I
2a
I
60
I
32
I
6a
I
3a
I
6c
I
42
I
6e
I
54
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
4
x
8
received
x
7
threads
x
5
count
x
5
mutex
p
19
I
-1
I
6
I
0
I
7
I
9
I
9
I
13
I
b
I
1d
I
1b
I
27
I
21
I
32
I
29
I
3d
I
39
I
48
I
5a
I
53
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
7
context
p
5
I
-1
I
5
I
0
I
6
I
b
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
8
describe
p
3
I
2
I
5
I
d
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
x
13
attach_method
p
5
I
0
I
2
I
1b
I
4
I
37
x
54
/Users/cremes/dev/mygit/ffi-rzmq/spec/pushpull_spec.rb
p
0
