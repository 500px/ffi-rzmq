!RBIX
17064710627737423303
19
M
1
n
n
x
10
__script__
i
55
5
45
0
1
45
0
2
65
49
3
0
49
4
1
7
5
64
35
1
49
6
2
47
49
7
1
15
99
7
8
65
49
9
2
13
99
12
7
10
12
7
11
12
65
12
49
12
4
15
49
10
0
15
2
11
I
6
I
0
I
0
I
0
I
0
n
p
13
x
4
File
n
n
x
11
active_path
x
7
dirname
s
E
8
US-ASCII
11
spec_helper
x
4
join
x
7
require
x
3
ZMQ
x
11
open_module
x
15
__module_init__
M
1
n
n
x
3
ZMQ
i
13
5
66
5
45
0
1
56
2
47
50
3
1
11
I
3
I
0
I
0
I
0
I
0
n
p
4
x
6
Socket
n
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
189
5
45
0
1
47
49
2
1
15
45
3
4
49
5
0
9
66
45
6
7
43
8
45
6
9
43
10
45
6
11
43
12
45
6
13
43
14
45
6
15
43
16
45
6
17
43
18
45
6
19
43
20
45
6
21
43
22
45
6
23
43
24
35
9
8
134
45
3
25
49
26
0
9
133
45
6
27
43
8
45
6
28
43
10
45
6
29
43
12
45
6
30
43
14
45
6
31
43
16
45
6
32
43
18
45
6
33
43
20
45
6
34
43
22
45
6
35
43
24
45
6
36
43
37
45
6
38
43
39
35
11
8
134
1
19
0
15
5
7
40
64
56
41
47
50
42
1
15
5
7
43
64
56
44
47
50
42
1
15
5
7
45
64
56
46
47
50
42
1
15
20
0
56
47
50
48
0
15
5
7
49
64
56
50
47
50
51
1
11
I
d
I
1
I
0
I
0
I
0
n
p
52
x
9
APIHelper
n
x
7
include
x
6
LibZMQ
n
x
9
version2?
x
3
ZMQ
n
x
3
REQ
n
x
3
REP
n
x
6
DEALER
n
x
6
ROUTER
n
x
3
PUB
n
x
3
SUB
n
x
4
PUSH
n
x
4
PULL
n
x
4
PAIR
n
x
9
version3?
n
n
n
n
n
n
n
n
n
n
x
4
XPUB
n
x
4
XSUB
s
E
8
US-ASCII
17
when initializing
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
84
5
7
0
56
1
47
50
2
1
15
5
7
0
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
7
1
15
5
7
8
64
56
9
47
50
7
1
15
5
7
10
64
56
11
47
50
7
1
15
21
1
0
56
12
50
13
0
15
5
7
14
64
56
15
47
50
7
1
15
5
7
16
64
56
17
47
50
7
1
11
I
4
I
0
I
0
I
0
I
0
n
p
18
x
3
all
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
27
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
11
I
3
I
0
I
0
I
0
I
0
n
p
6
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
p
3
I
-1
I
11
I
1b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
4
@ctx
x
9
terminate
p
3
I
-1
I
12
I
6
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
5
after
s
E
8
US-ASCII
39
should raise an error for a nil context
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
0
n
p
7
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
91
45
0
1
13
71
2
47
9
54
47
49
3
0
13
45
4
5
43
6
13
71
2
47
9
38
47
49
3
0
13
78
47
49
7
1
15
8
42
78
49
2
1
45
8
9
43
10
47
49
7
2
15
8
90
45
4
11
43
6
13
71
2
47
9
78
47
49
3
0
13
78
47
49
7
1
15
8
82
78
49
2
1
45
8
12
43
10
49
2
2
11
I
6
I
0
I
0
I
0
I
0
n
p
13
x
6
Socket
n
x
3
new
x
8
allocate
x
3
FFI
n
x
7
Pointer
x
10
initialize
x
3
ZMQ
n
x
3
REQ
n
n
p
3
I
-1
I
16
I
5b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
lambda
x
3
ZMQ
n
x
12
ContextError
x
15
raise_exception
x
6
should
p
5
I
-1
I
15
I
0
I
16
I
15
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
2
it
s
E
8
US-ASCII
47
works with a Context#pointer as the context_ptr
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
0
n
p
7
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
53
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
49
11
0
11
I
6
I
1
I
0
I
0
I
0
n
p
12
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
x
5
close
p
7
I
-1
I
1a
I
0
I
1b
I
2f
I
1c
I
35
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
1
s
x
6
lambda
x
3
ZMQ
n
x
12
ContextError
x
15
raise_exception
x
10
should_not
p
9
I
-1
I
19
I
0
I
1a
I
7
I
1d
I
11
I
1a
I
15
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
48
works with a Context instance as the context_ptr
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
21
5
56
0
47
50
1
0
5
45
2
3
43
4
47
49
5
1
49
6
1
11
I
4
I
0
I
0
I
0
I
0
n
p
7
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
47
45
0
1
13
71
2
47
9
28
47
49
3
0
13
39
4
45
5
6
43
7
47
49
8
2
15
8
38
39
4
45
5
9
43
7
49
2
2
19
0
15
20
0
49
10
0
11
I
6
I
1
I
0
I
0
I
0
n
p
11
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
3
ZMQ
n
x
3
SUB
x
10
initialize
n
x
5
close
p
7
I
-1
I
21
I
0
I
22
I
29
I
23
I
2f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
1
s
x
6
lambda
x
3
ZMQ
n
x
12
ContextError
x
15
raise_exception
x
10
should_not
p
9
I
-1
I
20
I
0
I
21
I
7
I
24
I
11
I
21
I
15
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
27
5
7
0
45
1
2
43
3
20
0
49
4
1
47
101
5
7
6
63
3
56
7
47
50
8
1
11
I
6
I
1
I
1
I
0
I
1
n
p
9
s
E
8
US-ASCII
33
should not raise an error for a [
x
3
ZMQ
n
x
17
SocketTypeNameMap
x
2
[]
x
4
to_s
s
E
8
US-ASCII
13
] socket type
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
24
1
19
0
15
5
56
0
47
50
1
0
5
48
2
49
3
1
15
20
0
49
4
0
11
I
4
I
1
I
0
I
0
I
0
n
p
5
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
44
45
0
1
13
71
2
47
9
29
47
49
3
0
13
39
4
49
5
0
21
2
0
47
49
6
2
15
8
40
39
4
49
5
0
21
2
0
49
2
2
22
1
0
11
I
5
I
0
I
0
I
0
I
0
n
p
7
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
10
initialize
p
3
I
-1
I
2c
I
2c
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
lambda
x
11
raise_error
x
10
should_not
x
5
close
p
9
I
-1
I
2a
I
0
I
2b
I
4
I
2c
I
12
I
2d
I
18
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
x
2
it
p
5
I
-1
I
28
I
0
I
2a
I
1b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
11
socket_type
x
4
each
s
E
8
US-ASCII
69
should set the :socket accessor to the raw socket allocated by libzmq
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
106
5
7
0
64
47
49
1
1
19
0
15
20
0
44
43
2
79
49
3
1
13
7
4
3
49
5
2
15
49
6
1
15
45
7
8
7
9
49
10
1
20
0
49
11
1
15
45
12
13
13
71
14
47
9
77
47
49
15
0
13
39
16
49
17
0
45
18
19
43
20
47
49
21
2
15
8
90
39
16
49
17
0
45
18
22
43
20
49
14
2
19
1
15
20
1
49
23
0
49
24
0
20
0
83
25
11
I
8
I
2
I
0
I
0
I
0
n
p
26
s
E
8
US-ASCII
6
socket
x
4
mock
x
4
Hash
x
16
new_from_literal
x
5
null?
x
3
[]=
x
5
stub!
x
6
LibZMQ
n
x
10
zmq_socket
x
14
should_receive
x
10
and_return
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
x
6
socket
x
6
should
x
2
==
p
13
I
-1
I
31
I
0
I
32
I
b
I
33
I
20
I
34
I
2e
I
36
I
5d
I
37
I
6a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
6
socket
x
4
sock
s
E
8
US-ASCII
40
should define a finalizer on this object
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
66
45
0
1
7
2
49
3
1
79
49
4
1
15
45
5
6
13
71
7
47
9
44
47
49
8
0
13
39
9
49
10
0
45
11
12
43
13
47
49
14
2
15
8
57
39
9
49
10
0
45
11
15
43
13
49
7
2
19
0
15
20
0
49
16
0
11
I
6
I
1
I
0
I
0
I
0
n
p
17
x
11
ObjectSpace
n
x
16
define_finalizer
x
14
should_receive
x
8
at_least
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
x
5
close
p
9
I
-1
I
3a
I
0
I
3b
I
d
I
3c
I
3c
I
3d
I
42
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
p
19
I
-1
I
10
I
0
I
11
I
a
I
12
I
14
I
15
I
1f
I
19
I
2a
I
20
I
35
I
28
I
3e
I
31
I
49
I
3a
I
54
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
7
context
s
E
8
US-ASCII
13
calling close
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
31
5
7
0
56
1
47
50
2
1
15
5
7
0
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
7
1
11
I
4
I
0
I
0
I
0
I
0
n
p
8
x
3
all
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
27
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
11
I
3
I
0
I
0
I
0
I
0
n
p
6
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
p
3
I
-1
I
43
I
1b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
4
@ctx
x
9
terminate
p
3
I
-1
I
44
I
6
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
5
after
s
E
8
US-ASCII
34
should call LibZMQ.close only once
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
90
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
49
11
0
19
1
15
45
12
13
7
14
49
15
1
20
1
49
16
1
15
20
0
49
14
0
15
20
0
49
14
0
15
45
12
17
20
1
49
14
1
11
I
7
I
2
I
0
I
0
I
0
n
p
18
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
x
6
socket
x
6
LibZMQ
n
x
5
close
x
14
should_receive
x
4
with
n
p
15
I
-1
I
46
I
0
I
47
I
2f
I
48
I
37
I
4a
I
45
I
4b
I
4b
I
4c
I
51
I
4d
I
5a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
4
sock
x
10
raw_socket
x
2
it
p
9
I
-1
I
42
I
0
I
43
I
a
I
44
I
14
I
46
I
1f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
9
identity=
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
75
5
7
0
56
1
47
50
2
1
15
5
7
0
56
3
47
50
4
1
15
5
7
5
64
56
6
47
50
7
1
15
5
7
8
64
56
9
47
50
7
1
15
5
7
10
64
56
11
47
50
7
1
15
5
7
12
64
56
13
47
50
7
1
15
5
7
14
64
56
15
47
50
7
1
11
I
4
I
0
I
0
I
0
I
0
n
p
16
x
3
all
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
27
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
11
I
3
I
0
I
0
I
0
I
0
n
p
6
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
p
3
I
-1
I
54
I
1b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
4
@ctx
x
9
terminate
p
3
I
-1
I
55
I
6
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
5
after
s
E
8
US-ASCII
59
fails to set identity for identities in excess of 255 bytes
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
85
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
7
11
64
7
12
49
13
1
13
18
2
49
14
1
15
15
20
0
49
15
0
49
16
0
7
17
64
83
18
15
20
0
49
19
0
11
I
6
I
1
I
0
I
0
I
0
n
p
20
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
s
E
8
US-ASCII
1
a
I
100
x
1
*
x
9
identity=
x
8
identity
x
6
should
s
E
8
US-ASCII
0

x
2
==
x
5
close
p
11
I
-1
I
57
I
0
I
58
I
2f
I
5a
I
41
I
5b
I
4f
I
5c
I
55
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
x
2
it
s
E
8
US-ASCII
48
fails to set identity for identities of length 0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
80
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
7
11
64
13
18
2
49
12
1
15
15
20
0
49
13
0
49
14
0
7
11
64
83
15
15
20
0
49
16
0
11
I
6
I
1
I
0
I
0
I
0
n
p
17
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
s
E
8
US-ASCII
0

x
9
identity=
x
8
identity
x
6
should
x
2
==
x
5
close
p
11
I
-1
I
5f
I
0
I
60
I
2f
I
62
I
3c
I
63
I
4a
I
64
I
50
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
s
E
8
US-ASCII
42
sets the identity for identities of 1 byte
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
80
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
7
11
64
13
18
2
49
12
1
15
15
20
0
49
13
0
49
14
0
7
11
64
83
15
15
20
0
49
16
0
11
I
6
I
1
I
0
I
0
I
0
n
p
17
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
s
E
8
US-ASCII
1
a
x
9
identity=
x
8
identity
x
6
should
x
2
==
x
5
close
p
11
I
-1
I
67
I
0
I
68
I
2f
I
6a
I
3c
I
6b
I
4a
I
6c
I
50
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
s
E
8
US-ASCII
40
set the identity identities of 255 bytes
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
90
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
7
11
64
4
255
49
12
1
13
18
2
49
13
1
15
15
20
0
49
14
0
49
15
0
7
11
64
4
255
49
12
1
83
16
15
20
0
49
17
0
11
I
6
I
1
I
0
I
0
I
0
n
p
18
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
s
E
8
US-ASCII
1
a
x
1
*
x
9
identity=
x
8
identity
x
6
should
x
2
==
x
5
close
p
11
I
-1
I
6f
I
0
I
70
I
2f
I
72
I
41
I
73
I
54
I
74
I
5a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
s
E
8
US-ASCII
44
should convert numeric identities to strings
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
79
45
0
1
13
71
2
47
9
31
47
49
3
0
13
39
4
49
5
0
45
6
7
43
8
47
49
9
2
15
8
44
39
4
49
5
0
45
6
10
43
8
49
2
2
19
0
15
20
0
4
7
13
18
2
49
11
1
15
15
20
0
49
12
0
49
13
0
7
14
64
83
15
15
20
0
49
16
0
11
I
6
I
1
I
0
I
0
I
0
n
p
17
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
3
ZMQ
n
x
3
REQ
x
10
initialize
n
x
9
identity=
x
8
identity
x
6
should
s
E
8
US-ASCII
1
7
x
2
==
x
5
close
p
11
I
-1
I
77
I
0
I
78
I
2f
I
7a
I
3b
I
7b
I
49
I
7c
I
4f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
4
sock
p
17
I
-1
I
53
I
0
I
54
I
a
I
55
I
14
I
57
I
1f
I
5f
I
2a
I
67
I
35
I
6f
I
40
I
77
I
4b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
54
5
7
0
45
1
2
43
3
20
0
49
4
1
47
101
5
7
6
63
3
56
7
47
50
8
1
15
5
7
9
45
1
10
43
3
20
0
49
4
1
47
101
5
7
6
63
3
56
11
47
50
8
1
11
I
6
I
1
I
1
I
0
I
1
n
p
12
s
E
8
US-ASCII
18
#setsockopt for a 
x
3
ZMQ
n
x
17
SocketTypeNameMap
x
2
[]
x
4
to_s
s
E
8
US-ASCII
7
 socket
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
224
5
7
0
56
1
47
50
2
1
15
5
7
0
56
3
47
50
4
1
15
5
7
5
56
6
47
50
7
1
15
5
7
8
56
9
47
50
4
1
15
5
7
10
64
56
11
47
50
12
1
15
5
47
49
13
0
9
103
5
7
14
64
56
15
47
50
12
1
15
5
7
16
64
56
17
47
50
12
1
15
5
7
18
64
56
19
47
50
12
1
15
5
7
20
64
56
21
47
50
12
1
8
113
5
7
22
64
56
23
47
50
12
1
15
5
7
24
64
56
25
47
50
12
1
15
5
7
26
64
56
27
47
50
12
1
15
5
7
28
64
56
29
47
50
12
1
15
5
7
30
64
56
31
47
50
12
1
15
5
7
32
64
56
33
47
50
12
1
15
5
7
34
64
56
35
47
50
12
1
15
5
7
36
64
56
37
47
50
12
1
15
5
7
38
64
56
39
47
50
12
1
15
5
7
40
64
56
41
47
50
12
1
15
5
7
42
64
56
43
47
50
12
1
11
I
4
I
0
I
0
I
0
I
0
n
p
44
x
3
all
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
27
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
11
I
3
I
0
I
0
I
0
I
0
n
p
6
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
p
3
I
-1
I
85
I
1b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
4
@ctx
x
9
terminate
p
3
I
-1
I
86
I
6
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
5
after
x
6
socket
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
41
45
0
1
13
71
2
47
9
29
47
49
3
0
13
39
4
49
5
0
21
2
0
47
49
6
2
15
8
40
39
4
49
5
0
21
2
0
49
2
2
11
I
5
I
0
I
0
I
0
I
0
n
p
7
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
10
initialize
p
5
I
-1
I
88
I
0
I
89
I
29
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
3
let
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
7
5
48
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
6
socket
x
5
close
p
5
I
-1
I
8c
I
0
I
8d
I
7
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
26
using option ZMQ::IDENTITY
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
61
should set the identity given any string under 255 characters
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
20
4
4
19
0
15
44
43
0
79
4
255
49
1
2
56
2
50
3
0
11
I
5
I
1
I
0
I
0
I
0
n
p
4
x
5
Range
x
3
new
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
69
7
0
64
20
0
49
1
1
19
1
15
5
48
2
45
3
4
43
5
20
1
49
6
2
15
35
0
19
2
15
5
48
2
45
3
7
43
5
20
2
49
8
2
19
3
15
20
3
49
9
0
78
83
10
15
20
2
78
49
11
1
49
9
0
20
1
83
10
11
I
8
I
4
I
1
I
0
I
1
n
p
12
s
E
8
US-ASCII
1
a
x
1
*
x
6
socket
x
3
ZMQ
n
x
8
IDENTITY
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
94
I
0
I
95
I
b
I
96
I
19
I
98
I
1e
I
99
I
2e
I
9a
I
37
I
9b
I
45
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
4
x
6
length
x
8
identity
x
5
array
x
2
rc
x
4
each
p
7
I
-1
I
92
I
0
I
93
I
5
I
94
I
14
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
6
length
x
2
it
s
E
8
US-ASCII
50
returns -1 given a string 256 characters or longer
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
41
7
0
64
7
1
49
2
1
19
0
15
35
0
19
1
15
5
48
3
45
4
5
43
6
20
0
49
7
2
19
2
15
20
2
49
8
0
77
83
9
11
I
7
I
3
I
0
I
0
I
0
n
p
10
s
E
8
US-ASCII
1
a
I
100
x
1
*
x
6
socket
x
3
ZMQ
n
x
8
IDENTITY
x
10
setsockopt
x
6
should
x
2
==
p
11
I
-1
I
9f
I
0
I
a0
I
b
I
a1
I
10
I
a2
I
20
I
a3
I
29
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
8
identity
x
5
array
x
2
rc
p
7
I
-1
I
91
I
0
I
92
I
b
I
9f
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
7
context
x
9
version2?
s
E
8
US-ASCII
21
using option ZMQ::HWM
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
53
should set the high water mark given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
4
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
3
HWM
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
ab
I
0
I
ac
I
5
I
ad
I
13
I
ae
I
18
I
af
I
28
I
b0
I
31
I
b1
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
3
hwm
x
5
array
x
2
rc
x
2
it
p
5
I
-1
I
aa
I
0
I
ab
I
b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
22
using option ZMQ::SWAP
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
48
should set the swap value given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
7
0
19
0
15
5
48
1
45
2
3
43
4
20
0
49
5
2
15
35
0
19
1
15
5
48
1
45
2
6
43
4
20
1
49
7
2
19
2
15
20
2
49
8
0
78
83
9
15
20
1
78
49
10
1
49
8
0
20
0
83
9
11
I
7
I
3
I
0
I
0
I
0
n
p
11
I
2710
x
6
socket
x
3
ZMQ
n
x
4
SWAP
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
b7
I
0
I
b8
I
5
I
b9
I
13
I
ba
I
18
I
bb
I
28
I
bc
I
31
I
bd
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
4
swap
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
33
returns -1 given a negative value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
30
7
0
19
0
15
5
48
1
45
2
3
43
4
20
0
49
5
2
19
1
15
20
1
49
6
0
77
83
7
11
I
6
I
2
I
0
I
0
I
0
n
p
8
I
-2710
x
6
socket
x
3
ZMQ
n
x
4
SWAP
x
10
setsockopt
x
6
should
x
2
==
p
9
I
-1
I
c0
I
0
I
c1
I
5
I
c2
I
15
I
c3
I
1e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
4
swap
x
2
rc
p
7
I
-1
I
b6
I
0
I
b7
I
b
I
c0
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
28
using option ZMQ::MCAST_LOOP
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
59
should enable the multicast loopback given a 1 (true) value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
56
5
48
0
45
1
2
43
3
79
49
4
2
15
35
0
19
0
15
5
48
0
45
1
5
43
3
20
0
49
6
2
19
1
15
20
1
49
7
0
78
83
8
15
20
0
78
49
9
1
5
48
10
49
7
1
11
I
6
I
2
I
0
I
0
I
0
n
p
11
x
6
socket
x
3
ZMQ
n
x
10
MCAST_LOOP
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
x
7
be_true
p
13
I
-1
I
c9
I
0
I
ca
I
d
I
cb
I
12
I
cc
I
22
I
cd
I
2b
I
ce
I
38
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
61
should disable the multicast loopback given a 0 (false) value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
56
5
48
0
45
1
2
43
3
78
49
4
2
15
35
0
19
0
15
5
48
0
45
1
5
43
3
20
0
49
6
2
19
1
15
20
1
49
7
0
78
83
8
15
20
0
78
49
9
1
5
48
10
49
7
1
11
I
6
I
2
I
0
I
0
I
0
n
p
11
x
6
socket
x
3
ZMQ
n
x
10
MCAST_LOOP
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
x
8
be_false
p
13
I
-1
I
d1
I
0
I
d2
I
d
I
d3
I
12
I
d4
I
22
I
d5
I
2b
I
d6
I
38
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
array
x
2
rc
p
7
I
-1
I
c8
I
0
I
c9
I
b
I
d1
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
35
using option ZMQ::RECOVERY_IVL_MSEC
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
96
should set the time interval for saving messages measured in milliseconds given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
200
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
17
RECOVERY_IVL_MSEC
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
dc
I
0
I
dd
I
5
I
de
I
13
I
df
I
18
I
e0
I
28
I
e1
I
31
I
e2
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
31
should default to a value of -1
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
48
77
19
0
15
35
0
19
1
15
5
48
0
45
1
2
43
3
20
1
49
4
2
19
2
15
20
2
49
5
0
78
83
6
15
20
1
78
49
7
1
49
5
0
20
0
83
6
11
I
7
I
3
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
17
RECOVERY_IVL_MSEC
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
13
I
-1
I
e5
I
0
I
e6
I
4
I
e7
I
9
I
e8
I
19
I
e9
I
22
I
ea
I
30
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
p
7
I
-1
I
db
I
0
I
dc
I
b
I
e5
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
26
using option ZMQ::IPV4ONLY
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
44
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
15
5
7
7
64
56
8
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
9
s
E
8
US-ASCII
47
should enable use of IPV6 sockets when set to 0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
62
78
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
8
IPV4ONLY
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
f1
I
0
I
f2
I
4
I
f3
I
12
I
f4
I
17
I
f5
I
27
I
f6
I
30
I
f7
I
3e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
30
should default to a value of 1
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
48
79
19
0
15
35
0
19
1
15
5
48
0
45
1
2
43
3
20
1
49
4
2
19
2
15
20
2
49
5
0
78
83
6
15
20
1
78
49
7
1
49
5
0
20
0
83
6
11
I
7
I
3
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
8
IPV4ONLY
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
13
I
-1
I
fa
I
0
I
fb
I
4
I
fc
I
9
I
fd
I
19
I
fe
I
22
I
ff
I
30
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
s
E
8
US-ASCII
33
returns -1 given a negative value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
29
77
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
77
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
7
x
6
socket
x
3
ZMQ
n
x
8
IPV4ONLY
x
10
setsockopt
x
6
should
x
2
==
p
9
I
-1
I
102
I
0
I
103
I
4
I
104
I
14
I
105
I
1d
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
value
x
2
rc
s
E
8
US-ASCII
28
returns -1 given a value > 1
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
29
80
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
77
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
7
x
6
socket
x
3
ZMQ
n
x
8
IPV4ONLY
x
10
setsockopt
x
6
should
x
2
==
p
9
I
-1
I
108
I
0
I
109
I
4
I
10a
I
14
I
10b
I
1d
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
value
x
2
rc
p
11
I
-1
I
f0
I
0
I
f1
I
b
I
fa
I
16
I
102
I
21
I
108
I
2c
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
27
using option ZMQ::SUBSCRIBE
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
35
45
0
1
43
2
21
2
0
83
3
9
24
5
7
4
64
56
5
47
50
6
1
8
34
5
7
7
64
56
8
47
50
6
1
11
I
4
I
0
I
0
I
0
I
0
n
p
9
x
3
ZMQ
n
x
3
SUB
x
2
==
s
E
8
US-ASCII
26
returns 0 for a SUB socket
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
26
5
48
0
45
1
2
43
3
7
4
64
49
5
2
19
0
15
20
0
49
6
0
78
83
7
11
I
5
I
1
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
9
SUBSCRIBE
s
E
8
US-ASCII
12
topic.string
x
10
setsockopt
x
6
should
x
2
==
p
7
I
-1
I
115
I
0
I
116
I
11
I
117
I
1a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
2
rc
x
2
it
s
E
8
US-ASCII
30
returns -1 for non-SUB sockets
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
26
5
48
0
45
1
2
43
3
7
4
64
49
5
2
19
0
15
20
0
49
6
0
77
83
7
11
I
5
I
1
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
9
SUBSCRIBE
s
E
8
US-ASCII
12
topic.string
x
10
setsockopt
x
6
should
x
2
==
p
7
I
-1
I
11a
I
0
I
11b
I
11
I
11c
I
1a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
2
rc
p
11
I
-1
I
113
I
0
I
114
I
c
I
115
I
18
I
11a
I
22
I
0
I
23
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
29
using option ZMQ::UNSUBSCRIBE
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
35
45
0
1
43
2
21
2
0
83
3
9
24
5
7
4
64
56
5
47
50
6
1
8
34
5
7
7
64
56
8
47
50
6
1
11
I
4
I
0
I
0
I
0
I
0
n
p
9
x
3
ZMQ
n
x
3
SUB
x
2
==
s
E
8
US-ASCII
61
returns 0 given a topic string that was previously subscribed
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
41
5
48
0
45
1
2
43
3
7
4
64
49
5
2
15
5
48
0
45
1
6
43
7
7
4
64
49
5
2
19
0
15
20
0
49
8
0
78
83
9
11
I
5
I
1
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
9
SUBSCRIBE
s
E
8
US-ASCII
12
topic.string
x
10
setsockopt
n
x
11
UNSUBSCRIBE
x
6
should
x
2
==
p
9
I
-1
I
124
I
0
I
125
I
f
I
126
I
20
I
127
I
29
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
2
rc
x
2
it
s
E
8
US-ASCII
30
returns -1 for non-SUB sockets
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
26
5
48
0
45
1
2
43
3
7
4
64
49
5
2
19
0
15
20
0
49
6
0
77
83
7
11
I
5
I
1
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
11
UNSUBSCRIBE
s
E
8
US-ASCII
12
topic.string
x
10
setsockopt
x
6
should
x
2
==
p
7
I
-1
I
12b
I
0
I
12c
I
11
I
12d
I
1a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
2
rc
p
11
I
-1
I
122
I
0
I
123
I
c
I
124
I
18
I
12b
I
22
I
0
I
23
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
26
using option ZMQ::AFFINITY
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
52
should set the affinity value given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
3
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
8
AFFINITY
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
134
I
0
I
135
I
5
I
136
I
13
I
137
I
18
I
138
I
28
I
139
I
31
I
13a
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
8
affinity
x
5
array
x
2
rc
x
2
it
p
5
I
-1
I
133
I
0
I
134
I
b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
22
using option ZMQ::RATE
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
57
should set the multicast send rate given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
200
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
4
RATE
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
140
I
0
I
141
I
5
I
142
I
13
I
143
I
18
I
144
I
28
I
145
I
31
I
146
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
4
rate
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
33
returns -1 given a negative value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
30
7
0
19
0
15
5
48
1
45
2
3
43
4
20
0
49
5
2
19
1
15
20
1
49
6
0
77
83
7
11
I
6
I
2
I
0
I
0
I
0
n
p
8
I
-c8
x
6
socket
x
3
ZMQ
n
x
4
RATE
x
10
setsockopt
x
6
should
x
2
==
p
9
I
-1
I
149
I
0
I
14a
I
5
I
14b
I
15
I
14c
I
1e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
4
rate
x
2
rc
p
7
I
-1
I
13f
I
0
I
140
I
b
I
149
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
30
using option ZMQ::RECOVERY_IVL
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
83
should set the multicast recovery buffer measured in seconds given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
200
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
12
RECOVERY_IVL
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
152
I
0
I
153
I
5
I
154
I
13
I
155
I
18
I
156
I
28
I
157
I
31
I
158
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
4
rate
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
33
returns -1 given a negative value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
30
7
0
19
0
15
5
48
1
45
2
3
43
4
20
0
49
5
2
19
1
15
20
1
49
6
0
77
83
7
11
I
6
I
2
I
0
I
0
I
0
n
p
8
I
-c8
x
6
socket
x
3
ZMQ
n
x
12
RECOVERY_IVL
x
10
setsockopt
x
6
should
x
2
==
p
9
I
-1
I
15b
I
0
I
15c
I
5
I
15d
I
15
I
15e
I
1e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
4
rate
x
2
rc
p
7
I
-1
I
151
I
0
I
152
I
b
I
15b
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
24
using option ZMQ::SNDBUF
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
52
should set the OS send buffer given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
100
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
6
SNDBUF
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
164
I
0
I
165
I
5
I
166
I
13
I
167
I
18
I
168
I
28
I
169
I
31
I
16a
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
4
size
x
5
array
x
2
rc
x
2
it
p
5
I
-1
I
163
I
0
I
164
I
b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
24
using option ZMQ::RCVBUF
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
55
should set the OS receive buffer given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
100
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
6
RCVBUF
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
170
I
0
I
171
I
5
I
172
I
13
I
173
I
18
I
174
I
28
I
175
I
31
I
176
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
4
size
x
5
array
x
2
rc
x
2
it
p
5
I
-1
I
16f
I
0
I
170
I
b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
24
using option ZMQ::LINGER
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
115
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
45
5
6
43
7
21
2
0
83
8
13
9
41
15
5
47
49
9
0
13
10
90
15
26
93
0
15
29
64
0
45
5
10
7
11
3
98
12
3
30
8
70
25
92
0
27
8
75
15
7
13
8
76
1
13
9
90
15
45
5
14
43
11
21
2
0
83
8
9
104
5
7
15
64
56
16
47
50
2
1
8
114
5
7
17
64
56
18
47
50
2
1
11
I
5
I
0
I
0
I
0
I
0
n
p
19
s
E
8
US-ASCII
91
should set the socket message linger option measured in milliseconds given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
200
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
6
LINGER
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
17c
I
0
I
17d
I
5
I
17e
I
13
I
17f
I
18
I
180
I
28
I
181
I
31
I
182
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
69
should set the socket message linger option to 0 for dropping packets
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
62
78
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
6
LINGER
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
185
I
0
I
186
I
4
I
187
I
12
I
188
I
17
I
189
I
27
I
18a
I
30
I
18b
I
3e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
x
3
ZMQ
n
x
3
SUB
x
2
==
x
9
version3?
n
x
4
XSUB
x
22
vm_const_defined_under
s
E
8
US-ASCII
8
constant
n
s
E
8
US-ASCII
30
should default to a value of 0
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
48
78
19
0
15
35
0
19
1
15
5
48
0
45
1
2
43
3
20
1
49
4
2
19
2
15
20
2
49
5
0
78
83
6
15
20
1
78
49
7
1
49
5
0
20
0
83
6
11
I
7
I
3
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
6
LINGER
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
13
I
-1
I
18f
I
0
I
190
I
4
I
191
I
9
I
192
I
19
I
193
I
22
I
194
I
30
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
s
E
8
US-ASCII
31
should default to a value of -1
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
48
77
19
0
15
35
0
19
1
15
5
48
0
45
1
2
43
3
20
1
49
4
2
19
2
15
20
2
49
5
0
78
83
6
15
20
1
78
49
7
1
49
5
0
20
0
83
6
11
I
7
I
3
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
6
LINGER
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
13
I
-1
I
197
I
0
I
198
I
4
I
199
I
9
I
19a
I
19
I
19b
I
22
I
19c
I
30
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
p
15
I
-1
I
17b
I
0
I
17c
I
b
I
185
I
16
I
18e
I
5c
I
18f
I
68
I
197
I
72
I
0
I
73
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
31
using option ZMQ::RECONNECT_IVL
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
114
should set the time interval for reconnecting disconnected sockets measured in milliseconds given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
200
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
13
RECONNECT_IVL
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
1a3
I
0
I
1a4
I
5
I
1a5
I
13
I
1a6
I
18
I
1a7
I
28
I
1a8
I
31
I
1a9
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
32
should default to a value of 100
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
49
4
100
19
0
15
35
0
19
1
15
5
48
0
45
1
2
43
3
20
1
49
4
2
19
2
15
20
2
49
5
0
78
83
6
15
20
1
78
49
7
1
49
5
0
20
0
83
6
11
I
7
I
3
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
13
RECONNECT_IVL
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
13
I
-1
I
1ac
I
0
I
1ad
I
5
I
1ae
I
a
I
1af
I
1a
I
1b0
I
23
I
1b1
I
31
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
p
7
I
-1
I
1a2
I
0
I
1a3
I
b
I
1ac
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
25
using option ZMQ::BACKLOG
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
82
should set the maximum number of pending socket connections given a positive value
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
63
4
200
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
15
35
0
19
1
15
5
48
0
45
1
5
43
3
20
1
49
6
2
19
2
15
20
2
49
7
0
78
83
8
15
20
1
78
49
9
1
49
7
0
20
0
83
8
11
I
7
I
3
I
0
I
0
I
0
n
p
10
x
6
socket
x
3
ZMQ
n
x
7
BACKLOG
x
10
setsockopt
n
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
15
I
-1
I
1b7
I
0
I
1b8
I
5
I
1b9
I
13
I
1ba
I
18
I
1bb
I
28
I
1bc
I
31
I
1bd
I
3f
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
32
should default to a value of 100
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
49
4
100
19
0
15
35
0
19
1
15
5
48
0
45
1
2
43
3
20
1
49
4
2
19
2
15
20
2
49
5
0
78
83
6
15
20
1
78
49
7
1
49
5
0
20
0
83
6
11
I
7
I
3
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
7
BACKLOG
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
13
I
-1
I
1c0
I
0
I
1c1
I
5
I
1c2
I
a
I
1c3
I
1a
I
1c4
I
23
I
1c5
I
31
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
3
x
5
value
x
5
array
x
2
rc
p
7
I
-1
I
1b6
I
0
I
1b7
I
b
I
1c0
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
p
47
I
-1
I
84
I
0
I
85
I
a
I
86
I
14
I
88
I
1e
I
8c
I
28
I
91
I
33
I
a8
I
3a
I
aa
I
45
I
b6
I
50
I
c8
I
5b
I
db
I
67
I
f0
I
71
I
0
I
72
I
113
I
7d
I
122
I
88
I
133
I
93
I
13f
I
9e
I
151
I
a9
I
163
I
b4
I
16f
I
bf
I
17b
I
ca
I
1a2
I
d5
I
1b6
I
e0
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
7
context
s
E
8
US-ASCII
18
#getsockopt for a 
n
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
102
5
7
0
56
1
47
50
2
1
15
5
7
0
56
3
47
50
4
1
15
5
7
5
56
6
47
50
7
1
15
5
7
8
56
9
47
50
4
1
15
45
10
11
7
12
13
70
9
61
15
44
43
13
7
14
78
49
15
2
6
12
49
16
1
9
78
5
7
17
64
56
18
47
50
19
1
8
79
1
15
5
7
20
64
56
21
47
50
19
1
15
5
7
22
64
56
23
47
50
19
1
11
I
5
I
0
I
0
I
0
I
0
n
p
24
x
3
all
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
27
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
11
I
3
I
0
I
0
I
0
I
0
n
p
6
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
p
3
I
-1
I
1cd
I
1b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
6
before
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
6
39
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
4
@ctx
x
9
terminate
p
3
I
-1
I
1ce
I
6
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
5
after
x
6
socket
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
41
45
0
1
13
71
2
47
9
29
47
49
3
0
13
39
4
49
5
0
21
2
0
47
49
6
2
15
8
40
39
4
49
5
0
21
2
0
49
2
2
11
I
5
I
0
I
0
I
0
I
0
n
p
7
x
6
Socket
n
x
3
new
x
8
allocate
x
4
@ctx
x
7
pointer
x
10
initialize
p
5
I
-1
I
1d0
I
0
I
1d1
I
29
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
3
let
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
7
5
48
0
49
1
0
11
I
2
I
0
I
0
I
0
I
0
n
p
2
x
6
socket
x
5
close
p
5
I
-1
I
1d4
I
0
I
1d5
I
7
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
13
RUBY_PLATFORM
n
n
x
6
Regexp
s
E
8
US-ASCII
12
linux|darwin
x
3
new
x
2
=~
s
E
8
US-ASCII
20
using option ZMQ::FD
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
22
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
s
E
8
US-ASCII
41
should return an FD as a positive integer
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
48
35
0
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
5
45
8
9
47
49
10
1
49
5
1
11
I
6
I
2
I
0
I
0
I
0
n
p
11
x
6
socket
x
3
ZMQ
n
x
2
FD
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
x
6
Fixnum
n
x
4
be_a
p
11
I
-1
I
1dc
I
0
I
1dd
I
5
I
1de
I
15
I
1df
I
1e
I
1e0
I
30
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
array
x
2
rc
x
2
it
s
E
8
US-ASCII
65
returns a valid FD that is accepted by the system poll() function
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
156
99
7
0
65
49
1
2
13
99
12
7
2
12
7
3
12
65
12
49
4
4
15
49
2
0
15
35
0
19
0
15
5
48
5
45
6
7
43
8
20
0
49
9
2
19
1
15
20
1
5
48
10
49
11
1
15
20
0
78
49
12
1
19
2
15
45
0
13
43
14
13
71
15
47
9
88
47
49
16
0
13
47
49
17
0
15
8
91
49
15
0
19
3
15
20
3
7
18
20
2
13
18
3
49
19
2
15
15
20
3
7
20
78
13
18
3
49
19
2
15
15
20
3
7
21
78
13
18
3
49
19
2
15
15
45
0
22
20
3
79
78
49
23
3
19
1
15
20
1
5
48
10
49
11
1
11
I
b
I
4
I
0
I
0
I
0
n
p
24
x
9
LibSocket
x
11
open_module
x
15
__module_init__
M
1
n
n
x
9
LibSocket
i
136
5
66
5
45
0
1
43
2
47
49
3
1
15
5
45
0
4
43
2
43
5
47
49
6
1
49
7
0
19
0
15
26
93
0
15
29
48
0
5
7
8
47
49
9
1
30
8
83
26
93
1
15
24
13
45
10
11
12
49
12
1
10
65
8
78
15
5
7
13
7
8
47
49
14
2
25
8
83
15
92
1
27
34
92
0
27
15
5
7
15
7
16
7
8
7
17
35
3
7
17
47
49
18
3
15
99
7
19
45
0
20
43
21
65
49
22
3
13
99
12
7
23
12
7
24
12
65
12
49
25
4
15
49
23
0
11
I
9
I
1
I
0
I
0
I
0
n
p
26
x
3
FFI
n
x
7
Library
x
6
extend
n
x
4
LIBC
x
7
ffi_lib
x
5
first
x
6
nfds_t
x
9
find_type
x
13
StandardError
n
x
3
===
x
6
uint32
x
7
typedef
x
4
poll
x
7
pointer
x
3
int
x
15
attach_function
x
6
PollFD
n
x
6
Struct
x
10
open_class
x
14
__class_init__
M
1
n
n
x
6
PollFD
i
20
5
66
5
7
0
7
1
7
2
7
3
7
4
7
3
47
49
5
6
11
I
7
I
0
I
0
I
0
I
0
n
p
6
x
2
fd
x
3
int
x
6
events
x
5
short
x
7
revents
x
6
layout
p
9
I
2
I
1f1
I
7
I
1f2
I
b
I
1f3
I
f
I
1f1
I
14
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
13
attach_method
p
17
I
2
I
1e8
I
d
I
1ea
I
1f
I
1ec
I
30
I
0
I
35
I
1ec
I
53
I
0
I
57
I
1ee
I
69
I
1f0
I
88
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
7
library
x
13
attach_method
x
6
socket
x
3
ZMQ
n
x
2
FD
x
10
getsockopt
x
7
be_zero
x
6
should
x
2
[]
n
x
6
PollFD
x
3
new
x
8
allocate
x
10
initialize
x
2
fd
x
3
[]=
x
6
events
x
7
revents
n
x
4
poll
p
25
I
-1
I
1e3
I
0
I
1e7
I
1a
I
1f7
I
1f
I
1f8
I
2f
I
1f9
I
38
I
1fa
I
41
I
1fd
I
5e
I
1fe
I
6c
I
1ff
I
79
I
200
I
86
I
202
I
93
I
203
I
9c
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
4
x
5
array
x
2
rc
x
2
fd
x
6
pollfd
p
7
I
-1
I
1db
I
0
I
1dc
I
b
I
1e3
I
16
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
7
context
s
E
8
US-ASCII
24
using option ZMQ::EVENTS
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
42
should return a mask of events as a Fixnum
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
48
35
0
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
5
45
8
9
47
49
10
1
49
5
1
11
I
6
I
2
I
0
I
0
I
0
n
p
11
x
6
socket
x
3
ZMQ
n
x
6
EVENTS
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
x
6
Fixnum
n
x
4
be_a
p
11
I
-1
I
20a
I
0
I
20b
I
5
I
20c
I
15
I
20d
I
1e
I
20e
I
30
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
array
x
2
rc
x
2
it
p
5
I
-1
I
209
I
0
I
20a
I
b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
s
E
8
US-ASCII
22
using option ZMQ::TYPE
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
11
5
7
0
64
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
s
E
8
US-ASCII
29
should return the socket type
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
45
35
0
19
0
15
5
48
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
49
5
0
21
3
0
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
8
x
6
socket
x
3
ZMQ
n
x
4
TYPE
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
p
11
I
-1
I
213
I
0
I
214
I
5
I
215
I
15
I
216
I
1e
I
217
I
2d
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
5
array
x
2
rc
x
2
it
p
5
I
-1
I
212
I
0
I
213
I
b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
p
23
I
-1
I
1cc
I
0
I
1cd
I
a
I
1ce
I
14
I
1d0
I
1e
I
1d4
I
28
I
1d8
I
42
I
1db
I
4e
I
1d8
I
4f
I
0
I
50
I
209
I
5b
I
212
I
66
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
p
7
I
-1
I
82
I
0
I
84
I
1b
I
1cc
I
36
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
11
socket_type
x
4
each
s
E
8
US-ASCII
43
Mapping socket EVENTS to POLLIN and POLLOUT
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
52
5
45
0
1
47
49
2
1
15
5
7
3
64
56
4
47
50
5
1
15
5
7
6
64
56
7
47
50
8
1
15
5
7
9
64
56
10
47
50
8
1
15
5
7
11
56
12
47
50
13
1
11
I
4
I
0
I
0
I
0
I
0
n
p
14
x
9
APIHelper
n
x
7
include
s
E
8
US-ASCII
20
pubsub sockets where
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
44
5
7
0
64
56
1
47
50
2
1
15
5
7
3
64
56
4
47
50
2
1
15
5
7
5
64
56
6
47
50
2
1
15
5
7
7
64
56
8
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
9
s
E
8
US-ASCII
56
SUB socket that received a message always has POLLIN set
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
46
35
0
19
0
15
39
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
49
5
0
45
1
8
43
9
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
10
x
4
@sub
x
3
ZMQ
n
x
6
EVENTS
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
n
x
6
POLLIN
p
11
I
-1
I
223
I
0
I
224
I
5
I
225
I
14
I
226
I
1d
I
227
I
2e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
6
events
x
2
rc
x
2
it
s
E
8
US-ASCII
33
PUB socket always has POLLOUT set
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
46
35
0
19
0
15
39
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
49
5
0
45
1
8
43
9
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
10
x
4
@pub
x
3
ZMQ
n
x
6
EVENTS
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
n
x
7
POLLOUT
p
11
I
-1
I
22a
I
0
I
22b
I
5
I
22c
I
14
I
22d
I
1d
I
22e
I
2e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
6
events
x
2
rc
s
E
8
US-ASCII
31
PUB socket never has POLLIN set
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
46
35
0
19
0
15
39
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
49
8
0
45
1
9
43
10
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
11
x
4
@pub
x
3
ZMQ
n
x
6
EVENTS
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
x
10
should_not
n
x
6
POLLIN
p
11
I
-1
I
231
I
0
I
232
I
5
I
233
I
14
I
234
I
1d
I
235
I
2e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
6
events
x
2
rc
s
E
8
US-ASCII
32
SUB socket never has POLLOUT set
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
46
35
0
19
0
15
39
0
45
1
2
43
3
20
0
49
4
2
19
1
15
20
1
49
5
0
78
83
6
15
20
0
78
49
7
1
49
8
0
45
1
9
43
10
83
6
11
I
6
I
2
I
0
I
0
I
0
n
p
11
x
4
@sub
x
3
ZMQ
n
x
6
EVENTS
x
10
getsockopt
x
6
should
x
2
==
x
2
[]
x
10
should_not
n
x
7
POLLOUT
p
11
I
-1
I
238
I
0
I
239
I
5
I
23a
I
14
I
23b
I
1d
I
23c
I
2e
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
6
events
x
2
rc
p
11
I
-1
I
222
I
0
I
223
I
b
I
22a
I
16
I
231
I
21
I
238
I
2c
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
19
shared_examples_for
s
E
8
US-ASCII
31
when SUB binds and PUB connects
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
10
5
7
0
56
1
47
50
2
1
11
I
4
I
0
I
0
I
0
I
0
n
p
3
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
115
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
15
5
48
6
15
7
7
64
19
0
15
39
5
45
8
9
43
10
49
11
1
38
12
15
39
12
45
8
13
43
14
7
15
64
49
16
2
19
1
15
20
1
49
17
0
78
83
18
15
39
5
45
8
19
43
20
49
11
1
38
21
15
39
12
20
0
49
22
1
15
5
39
21
20
0
47
49
23
2
15
39
21
7
24
64
49
25
1
11
I
6
I
2
I
0
I
0
I
0
n
p
26
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
x
12
poller_setup
s
E
8
US-ASCII
20
inproc://socket_test
x
3
ZMQ
n
x
3
SUB
x
6
socket
x
4
@sub
n
x
9
SUBSCRIBE
s
E
8
US-ASCII
0

x
10
setsockopt
x
6
should
x
2
==
n
x
3
PUB
x
4
@pub
x
4
bind
x
17
connect_to_inproc
s
E
8
US-ASCII
4
test
x
11
send_string
p
23
I
-1
I
242
I
0
I
243
I
1b
I
244
I
1f
I
246
I
25
I
247
I
32
I
248
I
42
I
249
I
4b
I
24b
I
58
I
24c
I
60
I
24d
I
6a
I
24f
I
73
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
8
endpoint
x
2
rc
x
6
before
p
5
I
-1
I
240
I
0
I
242
I
a
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
7
context
s
E
8
US-ASCII
31
when SUB connects and PUB binds
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
19
5
7
0
56
1
47
50
2
1
15
5
7
3
64
47
49
4
1
11
I
4
I
0
I
0
I
0
I
0
n
p
5
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
107
45
0
1
13
71
2
47
9
21
47
49
3
0
13
47
49
4
0
15
8
24
49
2
0
38
5
15
5
48
6
15
7
7
64
19
0
15
39
5
45
8
9
43
10
49
11
1
38
12
15
39
12
45
8
13
43
14
7
15
64
49
16
2
19
1
15
39
5
45
8
17
43
18
49
11
1
38
19
15
39
19
20
0
49
20
1
15
5
39
12
20
0
47
49
21
2
15
5
39
12
56
22
47
50
23
1
11
I
6
I
2
I
0
I
0
I
0
n
p
24
x
7
Context
n
x
3
new
x
8
allocate
x
10
initialize
x
4
@ctx
x
12
poller_setup
s
E
8
US-ASCII
20
inproc://socket_test
x
3
ZMQ
n
x
3
SUB
x
6
socket
x
4
@sub
n
x
9
SUBSCRIBE
s
E
8
US-ASCII
0

x
10
setsockopt
n
x
3
PUB
x
4
@pub
x
4
bind
x
17
connect_to_inproc
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
12
39
0
7
1
64
49
2
1
22
1
1
11
I
3
I
0
I
0
I
0
I
0
n
p
3
x
4
@pub
s
E
8
US-ASCII
4
test
x
11
send_string
p
5
I
-1
I
263
I
0
I
264
I
c
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
16
poll_it_for_read
p
21
I
-1
I
257
I
0
I
258
I
1b
I
259
I
1f
I
25b
I
25
I
25c
I
32
I
25d
I
42
I
25f
I
4f
I
260
I
57
I
261
I
61
I
263
I
6b
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
2
x
8
endpoint
x
2
rc
x
6
before
s
E
8
US-ASCII
20
pubsub sockets where
x
15
it_behaves_like
p
7
I
-1
I
255
I
0
I
257
I
a
I
268
I
13
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
4
each
M
1
p
2
x
9
for_block
t
n
x
3
ZMQ
i
18
39
0
49
1
0
15
39
2
49
1
0
15
39
3
49
4
0
11
I
2
I
0
I
0
I
0
I
0
n
p
5
x
4
@sub
x
5
close
x
4
@pub
x
4
@ctx
x
9
terminate
p
9
I
-1
I
26c
I
0
I
26d
I
6
I
26e
I
c
I
270
I
12
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
5
after
p
13
I
-1
I
21f
I
0
I
220
I
9
I
222
I
14
I
240
I
1f
I
255
I
2a
I
26c
I
34
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
8
describe
p
27
I
-1
I
7
I
0
I
8
I
9
I
a
I
11
I
b
I
42
I
c
I
4a
I
d
I
85
I
c
I
86
I
a
I
89
I
10
I
94
I
42
I
9f
I
53
I
aa
I
82
I
b2
I
21f
I
bd
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
1
x
12
socket_types
x
8
describe
p
3
I
2
I
7
I
d
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
x
13
attach_method
p
5
I
0
I
2
I
1b
I
4
I
37
x
52
/Users/cremes/dev/mygit/ffi-rzmq/spec/socket_spec.rb
p
0
